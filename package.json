{
  "name": "test-npm-upload",
  "version": "1.0.9",
  "description": "React drag and drop HOC with accessibility and keyboard actions support.",
  "main": "dist/commonjs/index.js",
  "jsnext:main": "dist/es6/index.js",
  "author": "Ethan Li, Viking Zhang",
  "license": "MIT",
  "dependencies": {
    "classnames": "^2.2.5"
  },
  "peerDependencies": {
    "react": "^15.6.1",
    "react-dom": "^15.6.1"
  },
  "devDependencies": {
    "argv": "0.0.2",
    "autoprefixer": "7.1.0",
    "babel-cli": "^6.24.1",
    "babel-core": "6.24.1",
    "babel-eslint": "7.2.3",
    "babel-jest": "20.0.3",
    "babel-loader": "7.0.0",
    "babel-plugin-transform-object-assign": "^6.22.0",
    "babel-plugin-transform-runtime": "^6.23.0",
    "babel-preset-es2015": "^6.24.1",
    "babel-preset-es2015-rollup": "^3.0.0",
    "babel-preset-react": "^6.24.1",
    "babel-preset-react-app": "^3.0.0",
    "babel-preset-stage-0": "^6.24.1",
    "babel-preset-stage-1": "^6.24.1",
    "babel-runtime": "6.23.0",
    "case-sensitive-paths-webpack-plugin": "1.1.4",
    "chalk": "1.1.3",
    "cross-env": "^5.0.1",
    "css-loader": "^0.28.1",
    "dotenv": "4.0.0",
    "eslint": "3.19.0",
    "eslint-config-react-app": "^1.0.4",
    "eslint-loader": "1.7.1",
    "eslint-plugin-flowtype": "2.33.0",
    "eslint-plugin-import": "2.2.0",
    "eslint-plugin-jsx-a11y": "5.0.3",
    "eslint-plugin-react": "7.0.1",
    "extract-text-webpack-plugin": "^2.1.0",
    "file-loader": "0.11.1",
    "fs-extra": "3.0.1",
    "html-webpack-plugin": "2.28.0",
    "jest": "20.0.3",
    "node-sass-chokidar": "0.0.3",
    "npm-run-all": "^4.0.2",
    "object-assign": "4.1.1",
    "postcss-flexbugs-fixes": "3.0.0",
    "postcss-loader": "2.0.5",
    "promise": "7.1.1",
    "react-dev-utils": "^3.0.0",
    "react-error-overlay": "^1.0.7",
    "react-fa": "^4.2.0",
    "rimraf": "^2.6.1",
    "sass-loader": "^6.0.6",
    "style-loader": "^0.17.0",
    "sw-precache-webpack-plugin": "0.9.1",
    "test-npm-upload": "^1.0.6",
    "url-loader": "0.5.8",
    "webpack": "2.6.1",
    "webpack-dev-server": "2.4.5",
    "webpack-manifest-plugin": "1.1.0",
    "whatwg-fetch": "2.0.3"
  },
  "scripts": {
    "build-css": "node-sass-chokidar src/ -o src/",
    "watch-css": "npm run build-css && node-sass-chokidar src/ -o src/ --watch --recursive",
    "start-dev": "node scripts/start.js",
    "start": "npm-run-all -p watch-css start-dev",
    "build-script": "node scripts/build.js",
    "npm:build": "npm run build-css && build-script",
    "test": "node scripts/test.js --env=jsdom",
    "build": "npm run build:commonjs && npm run build:es6 && npm run build:umd && npm run npm:css",
    "build:commonjs": "npm run clean:commonjs && cross-env BABEL_ENV=commonjs babel src/react-dnd-ax --out-dir dist/commonjs --ignore *.example.js,*.test.js",
    "build:es6": "npm run clean:es6 && cross-env BABEL_ENV=es6 BABEL_DISABLE_CACHE=1 babel src/react-dnd-ax --out-dir dist/es6 --ignore *.test.js",
    "build:umd": "cross-env NODE_ENV=production webpack --config webpack.config.umd.js --env.default && cross-env NODE_ENV=production webpack --config webpack.config.umd.js --env.compress",
    "npm:clean": "rimraf dist",
    "clean:umd": "rimraf dist/umd",
    "clean:es6": "rimraf dist/es6",
    "clean:commonjs": "rimraf dist/commonjs",
    "npm:css": "cp src/react-dnd-ax/react-dnd-ax.css dist/commonjs && cp src/react-dnd-ax/react-dnd-ax.css dist/es6",
    "npm:publish": "npm run npm:build && npm version patch && npm publish"
  },
  "jest": {
    "collectCoverageFrom": [
      "src/**/*.{js,jsx}"
    ],
    "setupFiles": [
      "<rootDir>/config/polyfills.js"
    ],
    "testMatch": [
      "<rootDir>/src/**/__tests__/**/*.js?(x)",
      "<rootDir>/src/**/?(*.)(spec|test).js?(x)"
    ],
    "testEnvironment": "node",
    "testURL": "http://localhost",
    "transform": {
      "^.+\\.(js|jsx)$": "<rootDir>/node_modules/babel-jest",
      "^.+\\.css$": "<rootDir>/config/jest/cssTransform.js",
      "^(?!.*\\.(js|jsx|css|json)$)": "<rootDir>/config/jest/fileTransform.js"
    },
    "transformIgnorePatterns": [
      "[/\\\\]node_modules[/\\\\].+\\.(js|jsx)$"
    ],
    "moduleNameMapper": {
      "^react-native$": "react-native-web"
    }
  },
  "babel": {
    "presets": [
      "react-app"
    ]
  },
  "eslintConfig": {
    "extends": "react-app"
  }
}
